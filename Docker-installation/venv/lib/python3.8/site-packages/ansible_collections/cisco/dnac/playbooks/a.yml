---
    - hosts: dnac_servers
      vars_files:
        - credentials.yml
      vars:
        dnac_login: &dnac_login
          dnac_host: "{{ dnac_host }}"
          dnac_username: "{{ dnac_username }}"
          dnac_password: "{{ dnac_password }}"
          dnac_verify: "{{ dnac_verify }}"
          dnac_port: "{{ dnac_port }}"
          dnac_version: "{{ dnac_version }}"
          dnac_debug: "{{ dnac_debug }}"
      gather_facts: false
      tasks:
        - name: Get all Discovery Count
          cisco.dnac.discovery_count_info:
            <<: *dnac_login
          register: result_discovery_count_info

        - name: Get all Discovery Range
          cisco.dnac.discovery_range_info:
            <<: *dnac_login
            startIndex: "{{ (i+1)*500-499 }}"
            recordsToReturn: 500
          with_sequence: start=1 end="{{ (result_discovery_count_info.dnac_response.response/500)|round(0,'ceil')|int|string|last }}"
          loop_control:
            index_var: i
          when:
            - result_discovery_count_info.dnac_response is defined
            - result_discovery_count_info.dnac_response.response is defined
          register: result_discovery_range_info

        - name: Get discovery id
          ansible.builtin.set_fact:
            discovery_id: "{{ item.1.id }}"
          with_subelements:
            - "{{ result_discovery_range_info.results }}"
            - dnac_response.response
          when:
            - result_discovery_range_info.results is defined
            - item.1 is defined
            - item.1.name is defined
            - item.1.name == "{{ discovery_name }}" #Here you pass the discovery_name

        - name: Delete discovery job"
          cisco.dnac.discovery:
            <<: *dnac_login
            id: "{{ discovery_id }}"
            state: absent
          when: discovery_id is defined
          register: delete_discovery_result

        - name: Show result
          ansible.builtin.debug:
            msg: "{{ delete_discovery_result }}"